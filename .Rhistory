library(xlsx)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(lme4)
library(lmerTest)
library(ggeffects)
library(glmmTMB)
require(splines)
library(DHARMa)
library(MASS)
library(mgcv)
require(maptools)
library(ggmap)
library(mapdata)
library(maps)
library(mapproj)
library(gridExtra)
library(grid)
library(knitr)
library(caret)
library(scales)
library(TMB)
library(INLA)
.libPaths(c("/scratch/joeyl/R-packages","/misc/scratch/opt-ubuntu/R-packages-4.x-22.04-LTS","/usr/lib/R/site-library","/usr/lib/R/library"))
library(xlsx)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(lme4)
library(lmerTest)
library(ggeffects)
library(glmmTMB)
require(splines)
library(DHARMa)
library(MASS)
library(mgcv)
require(maptools)
library(ggmap)
library(mapdata)
library(maps)
library(mapproj)
library(gridExtra)
library(grid)
library(knitr)
library(caret)
library(scales)
library(TMB)
library(INLA)
library(raster)
install.packages(c( "TMB"), type = 'source')
install.packages(c("TMB"), type = "source")
library(xlsx)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(lme4)
library(lmerTest)
library(ggeffects)
library(glmmTMB)
require(splines)
library(DHARMa)
library(MASS)
library(mgcv)
require(maptools)
library(ggmap)
library(mapdata)
library(maps)
library(mapproj)
library(gridExtra)
library(grid)
library(knitr)
library(caret)
library(scales)
library(TMB)
library(INLA)
library(raster)
library(sf)
library(terra)
library(rnaturalearth)
library(tmap)
library(tmaptools)
library(sdmTMB)
mydata=read.csv("mydata.csv")
draster=raster("BathyCHS_GEBCO_SEAM_mixedData_BOF_ExtentClip_100m_LatLong.asc")
mydata$depth=raster::extract(draster, y = cbind(mydata$lon , mydata$lat))
mydata= mydata%>%filter(
!is.na(depth),
!is.na(temperature),
!is.na(stress),
!is.na(salinity)
) %>% transmute(weight = weight,
height = height,
year = as.factor(year),
lon= lon, lat= lat ,
TOW_NO=TOW_NO,
ID_TOW = as.factor(paste(year,TOW_NO,sep = '_')),
depth = -depth ,
temperature = temperature,
stress=stress,
salinity=salinity)
all_set <- mydata %>%
mutate(height = as.numeric((log(height))),
depth = as.numeric((log(depth))),
temperature = as.numeric((log(temperature))),
stress = as.numeric((log(stress))),
salinity = as.numeric((log(salinity)))) %>%
mutate(X=lon, Y=lat) %>%
`attr<-`("projection", "LL") %>%
`attr<-`("zone", "20") %>%
PBSmapping::convUL()
summary(all_set )
library(glmmTMB)
install.packages("glmmTMB")
.libPaths(c("/scratch/joeyl/R-packages","/misc/scratch/opt-ubuntu/R-packages-4.x-22.04-LTS","/usr/lib/R/site-library","/usr/lib/R/library"))
install.packages(c( "TMB"), type = 'source')
library(xlsx)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(lme4)
library(lmerTest)
library(ggeffects)
library(glmmTMB)
require(splines)
library(DHARMa)
library(MASS)
library(mgcv)
require(maptools)
library(ggmap)
library(mapdata)
library(maps)
library(mapproj)
library(gridExtra)
library(grid)
library(knitr)
library(caret)
library(scales)
library(TMB)
library(INLA)
library(raster)
library(sf)
library(terra)
library(rnaturalearth)
library(tmap)
library(tmaptools)
library(sdmTMB)
mydata=read.csv("mydata.csv")
draster=raster("BathyCHS_GEBCO_SEAM_mixedData_BOF_ExtentClip_100m_LatLong.asc")
mydata$depth=raster::extract(draster, y = cbind(mydata$lon , mydata$lat))
mydata= mydata%>%filter(
!is.na(depth),
!is.na(temperature),
!is.na(stress),
!is.na(salinity)
) %>% transmute(weight = weight,
height = height,
year = as.factor(year),
lon= lon, lat= lat ,
TOW_NO=TOW_NO,
ID_TOW = as.factor(paste(year,TOW_NO,sep = '_')),
depth = -depth ,
temperature = temperature,
stress=stress,
salinity=salinity)
all_set <- mydata %>%
mutate(height = as.numeric((log(height))),
depth = as.numeric((log(depth))),
temperature = as.numeric((log(temperature))),
stress = as.numeric((log(stress))),
salinity = as.numeric((log(salinity)))) %>%
mutate(X=lon, Y=lat) %>%
`attr<-`("projection", "LL") %>%
`attr<-`("zone", "20") %>%
PBSmapping::convUL()
# Create GPS map
# create mesh: use UTM
mesh1 = inla.mesh.create(all_set[,c("X","Y")], refine = F, extend = F)
mesh <- make_mesh(all_set, xy_cols = c("X", "Y"),mesh=mesh1)
list_tow <- unique(all_set$ID_TOW)
folds_tow <- caret::createFolds(list_tow, k = 10, list = T, returnTrain = F)
folds <- lapply(folds_tow, function(x) which(all_set$ID_TOW %in% list_tow[x]))
all_set$foldID=NA
all_set$obs=c(1:length(all_set[,1]))
all_set$foldID[which(all_set$obs %in% folds$Fold01)]=1
all_set$foldID[which(all_set$obs %in% folds$Fold02)]=2
all_set$foldID[which(all_set$obs %in% folds$Fold03)]=3
all_set$foldID[which(all_set$obs %in% folds$Fold04)]=4
all_set$foldID[which(all_set$obs %in% folds$Fold05)]=5
all_set$foldID[which(all_set$obs %in% folds$Fold06)]=6
all_set$foldID[which(all_set$obs %in% folds$Fold07)]=7
all_set$foldID[which(all_set$obs %in% folds$Fold08)]=8
all_set$foldID[which(all_set$obs %in% folds$Fold09)]=9
all_set$foldID[which(all_set$obs %in% folds$Fold10)]=10
all_set$foldID=as.factor(all_set$foldID)
summary(all_set)
stmDTSa_cv <- sdmTMB_cv(
weight ~ year+height+temperature+depth+salinity,
family = student(link = "log",df=2), data = all_set,
time = "year",  spatial = "on", spatiotemporal = "iid",
share_range=FALSE,
mesh = mesh,
fold_ids = "foldID",
k_folds = 10,
parallel = TRUE,
use_initial_fit = FALSE
)
stmDT_cv <- sdmTMB_cv(
weight ~ year+height+temperature+depth,
family = student(link = "log",df=2), data = all_set,
time = "year",  spatial = "on", spatiotemporal = "iid",
share_range=FALSE,
mesh = mesh,
fold_ids = "foldID",
k_folds = 10,
parallel = TRUE,
use_initial_fit = FALSE
)
library(sdmTMB)
summary(all_set)
stmDTSt_cv <- sdmTMB_cv(
weight ~ year+height+temperature+depth+stress,
family = student(link = "log",df=2), data = all_set,
time = "year",  spatial = "on", spatiotemporal = "iid",
share_range=FALSE,
mesh = mesh,
fold_ids = "foldID",
k_folds = 10,
parallel = TRUE,
use_initial_fit = FALSE
)
library(xlsx)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(lme4)
library(lmerTest)
library(ggeffects)
library(glmmTMB)
require(splines)
library(DHARMa)
library(MASS)
library(mgcv)
require(maptools)
library(ggmap)
library(mapdata)
library(maps)
library(mapproj)
library(gridExtra)
library(grid)
library(knitr)
library(caret)
library(scales)
library(TMB)
library(INLA)
library(raster)
library(sf)
library(terra)
library(rnaturalearth)
library(tmap)
library(tmaptools)
library(sdmTMB)
? sdmTMB_cv
sdmTMB_cv(
weight ~ year+height+temperature+depth+stress,
family = student(link = "log",df=2), data = all_set,
time = "year",  spatial = "on", spatiotemporal = "iid",
share_range=FALSE,
mesh = mesh,
fold_ids = "foldID",
k_folds = 10,
parallel = TRUE,
use_initial_fit = FALSE
)
install.packages(c( "TMB"), type = 'source')
install.packages(c("TMB"), type = "source")
library(TMB)
library(INLA)
library(sdmTMB)
library(raster)
mydata=read.csv("mydata.csv")
draster=raster("BathyCHS_GEBCO_SEAM_mixedData_BOF_ExtentClip_100m_LatLong.asc")
mydata$depth=raster::extract(draster, y = cbind(mydata$lon , mydata$lat))
mydata= mydata%>%filter(
!is.na(depth),
!is.na(temperature),
!is.na(stress),
!is.na(salinity)
) %>% transmute(weight = weight,
height = height,
year = as.factor(year),
lon= lon, lat= lat ,
TOW_NO=TOW_NO,
ID_TOW = as.factor(paste(year,TOW_NO,sep = '_')),
depth = -depth ,
temperature = temperature,
stress=stress,
salinity=salinity)
library(dplyr)
library(tidyverse)
mydata=read.csv("mydata.csv")
draster=raster("BathyCHS_GEBCO_SEAM_mixedData_BOF_ExtentClip_100m_LatLong.asc")
mydata$depth=raster::extract(draster, y = cbind(mydata$lon , mydata$lat))
mydata= mydata%>%filter(
!is.na(depth),
!is.na(temperature),
!is.na(stress),
!is.na(salinity)
) %>% transmute(weight = weight,
height = height,
year = as.factor(year),
lon= lon, lat= lat ,
TOW_NO=TOW_NO,
ID_TOW = as.factor(paste(year,TOW_NO,sep = '_')),
depth = -depth ,
temperature = temperature,
stress=stress,
salinity=salinity)
all_set <- mydata %>%
mutate(height = as.numeric((log(height))),
depth = as.numeric((log(depth))),
temperature = as.numeric((log(temperature))),
stress = as.numeric((log(stress))),
salinity = as.numeric((log(salinity)))) %>%
mutate(X=lon, Y=lat) %>%
`attr<-`("projection", "LL") %>%
`attr<-`("zone", "20") %>%
PBSmapping::convUL()
# Create GPS map
# create mesh: use UTM
mesh1 = inla.mesh.create(all_set[,c("X","Y")], refine = F, extend = F)
mesh <- make_mesh(all_set, xy_cols = c("X", "Y"),mesh=mesh1)
set.seed(111)
list_tow <- unique(all_set$ID_TOW)
folds_tow <- caret::createFolds(list_tow, k = 10, list = T, returnTrain = F)
folds <- lapply(folds_tow, function(x) which(all_set$ID_TOW %in% list_tow[x]))
all_set$foldID=NA
all_set$obs=c(1:length(all_set[,1]))
all_set$foldID[which(all_set$obs %in% folds$Fold01)]=1
all_set$foldID[which(all_set$obs %in% folds$Fold02)]=2
all_set$foldID[which(all_set$obs %in% folds$Fold03)]=3
all_set$foldID[which(all_set$obs %in% folds$Fold04)]=4
all_set$foldID[which(all_set$obs %in% folds$Fold05)]=5
all_set$foldID[which(all_set$obs %in% folds$Fold06)]=6
all_set$foldID[which(all_set$obs %in% folds$Fold07)]=7
all_set$foldID[which(all_set$obs %in% folds$Fold08)]=8
all_set$foldID[which(all_set$obs %in% folds$Fold09)]=9
all_set$foldID[which(all_set$obs %in% folds$Fold10)]=10
all_set$foldID=as.factor(all_set$foldID)
stmDTSa_cv <- sdmTMB_cv(
weight ~ year+height+temperature+depth+salinity,
family = student(link = "log",df=2), data = all_set,
time = "year",  spatial = "on", spatiotemporal = "iid",
share_range=FALSE,
mesh = mesh,
fold_ids = "foldID",
k_folds = 10,
parallel = TRUE,
use_initial_fit = FALSE
)
install.packages(c( "glmmTMB"), type = 'source')
install.packages(c("glmmTMB"), type = "source")
install.packages(c( "sdmTMB"), type = 'source')
install.packages(c("sdmTMB"), type = "source")
library(sdmTMB)
stmDT_cv <- sdmTMB_cv(
weight ~ year+height+temperature+depth,
family = student(link = "log",df=2), data = all_set,
time = "year",  spatial = "on", spatiotemporal = "iid",
share_range=FALSE,
mesh = mesh,
fold_ids = "foldID",
k_folds = 10,
parallel = TRUE,
use_initial_fit = FALSE
)
View(mesh1)
install.packages("INLA",repos=c(getOption("repos"),INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
install.packages("INLA", repos = c(getOption("repos"), INLA = "https://inla.r-inla-download.org/R/stable"), dep = TRUE)
library(INLA)
stmDTSt_cv <- sdmTMB_cv(
weight ~ year+height+temperature+depth+stress,
family = student(link = "log",df=2), data = all_set,
time = "year",  spatial = "on", spatiotemporal = "iid",
share_range=FALSE,
mesh = mesh,
fold_ids = "foldID",
k_folds = 10,
parallel = TRUE,
use_initial_fit = FALSE
)
sdmTMB_cv(
weight ~ year+height,
family = student(link = "log",df=2), data = all_set,
time = "year",  spatial = "on", spatiotemporal = "off",
mesh = mesh,
fold_ids = "foldID",
k_folds = 10,
parallel = TRUE,
use_initial_fit = FALSE
)
sdmTMB(
weight ~ year+ height+depth+temperature,
family = student(link = "log", df = 2), data = all_set, mesh = mesh,
time = "year", spatial = "on", spatiotemporal = "iid",
share_range=FALSE
)
.libPaths()
install(sdmTMB)
install.packages("sdmTMB")
library(INLA)
library(sdmTMB)
sdmTMB(
weight ~ year+height,
family = gaussian(link = "log"), data = all_set, mesh = mesh,
time = "year", spatial = "on", spatiotemporal = "iid",
share_range=FALSE
)
library(TMB)
install.packages("Matrix")
install.packages("Matrix")
library(xlsx)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(lme4)
library(lmerTest)
library(ggeffects)
library(glmmTMB)
require(splines)
library(DHARMa)
library(MASS)
library(mgcv)
require(maptools)
library(ggmap)
library(mapdata)
library(maps)
library(mapproj)
library(gridExtra)
library(grid)
library(knitr)
library(caret)
library(scales)
library(TMB)
library(INLA)
library(raster)
library(sf)
library(terra)
library(rnaturalearth)
library(tmap)
library(tmaptools)
library(sdmTMB)
library(ggpubr)
library(corrplot )
library(rgdal)
sdmTMB(
weight ~ year+height,
family = student(link = "log",df=2), data = all_set, mesh = mesh,
time = "year", spatial = "on", spatiotemporal = "iid",
share_range=FALSE
)
.libpath()
.libPaths
.libPaths()
saveRDS(mesh,"mesh.rds")
library(TMB)
library(INLA)
library(sdmTMB)
